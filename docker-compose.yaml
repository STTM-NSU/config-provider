services:
  postgres:
    image: postgres:alpine3.20
    container_name: postgres
    restart: unless-stopped
    volumes:
      - sttm_db:/var/lib/postgresql/data
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: -p ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}", "-d", "${POSTGRES_DB_NAME}", "-p", "${POSTGRES_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    networks:
      - internal
  migrations:
    build:
      context: .
      dockerfile: ./docker/migrations.dockerfile
    container_name: migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - sttm_redis:/data
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:6379"
      - "${REDIS_INSIGHT_PORT}:8001"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD}"
    networks:
      - internal
  stocks-scraper:
    profiles:
      - disabled
    build:
      context: https://github.com/STTM-NSU/stocks-scraper.git
      dockerfile: Dockerfile
    container_name: stocks-scraper
    restart: no
    volumes:
      - ./configs/stocks-scraper.yaml:/go/configs/config.yaml
      - ./configs/invest.yaml:/go/configs/invest.yaml
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_started
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USERNAME: "${POSTGRES_USERNAME}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB_NAME: "${POSTGRES_DB_NAME}"
      POSTGRES_SSL_MODE: "${POSTGRES_SSL_MODE}"
      T_INVEST_API_TOKEN: "${T_INVEST_API_TOKEN}"
    networks:
      - internal
  web-scraper:
    profiles:
      - disabled
    build:
      context: https://github.com/STTM-NSU/web-scraper.git
      dockerfile: Dockerfile
    container_name: web-scraper
    restart: no
    volumes:
      - ./configs/web-scraper.yaml:/go/configs/config.yaml
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      PROXIES: "${PROXIES}"
    networks:
      - internal

volumes:
  sttm_db:
  sttm_redis:

networks:
  internal:
    name: internal
    driver: bridge


